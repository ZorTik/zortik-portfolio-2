// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

//datasource db {
//  provider = "mysql"
//  url = env("DATABASE_PRISMA_URL")
//}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_PRISMA_URL")
  directUrl = env("DATABASE_URL_NON_POOLING")
  //shadowDatabaseUrl = env("DATABASE_URL_NON_POOLING")
}

model Article {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  description String   @db.VarChar(255)
  title       String   @db.VarChar(255)
  content     String   @db.Text
}

model ArticleView {
  id         Int      @id @default(autoincrement())
  article_id Int
  user_id    String?
  date       DateTime @default(now())
}

model User {
  user_id    String @id
  username   String
  scopes     Json   @default("[]")
  avatar_url String?
}

model UserTenantLink {
  user_id        String @id
  tenant_user_id String
  tenant_id      String
}

model PrivateKey {
  user_id String @id
  key     String
}

model Credentials {
  user_id  String @id
  username String @unique
  password String
}

model ChatRoom {
  id           Int           @id @default(autoincrement())
  title        String
  created_at   DateTime      @default(now())
  creator_id   String
  participants Json          @default("[]")
  state        ChatRoomState @default(OPEN)
}

model ChatMessage {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  room_id    Int
  user_id    String
  content    String
}

enum ChatRoomState {
  OPEN
  CLOSED
}

model EventWebhook {
  id         Int      @id @default(autoincrement())
  name       String
  endpoint   String
  types      Json     @default("[]")
  created_at DateTime @default(now())
}
